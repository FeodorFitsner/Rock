//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;
using Rock.Attribute;
using Rock.Model;
using Rock.Web.Cache;

namespace Rock.ViewModel
{
    /// <summary>
    /// AuthClient View Model
    /// </summary>
    [ViewModelOf( typeof( Rock.Model.AuthClient ) )]
    public partial class AuthClientViewModel : ViewModelBase
    {
        /// <summary>
        /// Gets or sets the AllowedClaims.
        /// </summary>
        /// <value>
        /// The AllowedClaims.
        /// </value>
        public string AllowedClaims { get; set; }

        /// <summary>
        /// Gets or sets the AllowedScopes.
        /// </summary>
        /// <value>
        /// The AllowedScopes.
        /// </value>
        public string AllowedScopes { get; set; }

        /// <summary>
        /// Gets or sets the AllowUserApiAccess.
        /// </summary>
        /// <value>
        /// The AllowUserApiAccess.
        /// </value>
        public bool AllowUserApiAccess { get; set; }

        /// <summary>
        /// Gets or sets the ClientId.
        /// </summary>
        /// <value>
        /// The ClientId.
        /// </value>
        public string ClientId { get; set; }

        /// <summary>
        /// Gets or sets the ClientSecretHash.
        /// </summary>
        /// <value>
        /// The ClientSecretHash.
        /// </value>
        public string ClientSecretHash { get; set; }

        /// <summary>
        /// Gets or sets the IsActive.
        /// </summary>
        /// <value>
        /// The IsActive.
        /// </value>
        public bool IsActive { get; set; }

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        /// <value>
        /// The Name.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the PostLogoutRedirectUri.
        /// </summary>
        /// <value>
        /// The PostLogoutRedirectUri.
        /// </value>
        public string PostLogoutRedirectUri { get; set; }

        /// <summary>
        /// Gets or sets the RedirectUri.
        /// </summary>
        /// <value>
        /// The RedirectUri.
        /// </value>
        public string RedirectUri { get; set; }

        /// <summary>
        /// Gets or sets the CreatedDateTime.
        /// </summary>
        /// <value>
        /// The CreatedDateTime.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the ModifiedDateTime.
        /// </summary>
        /// <value>
        /// The ModifiedDateTime.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the CreatedByPersonAliasId.
        /// </summary>
        /// <value>
        /// The CreatedByPersonAliasId.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the ModifiedByPersonAliasId.
        /// </summary>
        /// <value>
        /// The ModifiedByPersonAliasId.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

        /// <summary>
        /// Sets the properties from.
        /// </summary>
        /// <param name="model">The model.</param>
        /// <param name="currentPerson">The current person.</param>
        /// <param name="loadAttributes">if set to <c>true</c> [load attributes].</param>
        public virtual void SetPropertiesFrom( Rock.Model.AuthClient model, Person currentPerson = null, bool loadAttributes = true )
        {
            if ( model == null )
            {
                return;
            }

            if ( loadAttributes && model is IHasAttributes hasAttributes )
            {
                if ( hasAttributes.Attributes == null )
                {
                    hasAttributes.LoadAttributes();
                }

                Attributes = hasAttributes.AttributeValues.Where( av =>
                {
                    var attribute = AttributeCache.Get( av.Value.AttributeId );
                    return attribute?.IsAuthorized( Rock.Security.Authorization.EDIT, currentPerson ) ?? false;
                } ).ToDictionary(
                    kvp => kvp.Key,
                    kvp => kvp.Value.ToViewModel<AttributeValueViewModel>() as object );
            }

            Id = model.Id;
            Guid = model.Guid;
            AllowedClaims = model.AllowedClaims;
            AllowedScopes = model.AllowedScopes;
            AllowUserApiAccess = model.AllowUserApiAccess;
            ClientId = model.ClientId;
            ClientSecretHash = model.ClientSecretHash;
            IsActive = model.IsActive;
            Name = model.Name;
            PostLogoutRedirectUri = model.PostLogoutRedirectUri;
            RedirectUri = model.RedirectUri;
            CreatedDateTime = model.CreatedDateTime;
            ModifiedDateTime = model.ModifiedDateTime;
            CreatedByPersonAliasId = model.CreatedByPersonAliasId;
            ModifiedByPersonAliasId = model.ModifiedByPersonAliasId;

            SetAdditionalPropertiesFrom( model, currentPerson, loadAttributes );
        }

        /// <summary>
        /// Creates a view model from the specified model.
        /// </summary>
        /// <param name="model">The model.</param>
        /// <param name="currentPerson" >The current person.</param>
        /// <param name="loadAttributes" >if set to <c>true</c> [load attributes].</param>
        /// <returns></returns>
        public static AuthClientViewModel From( Rock.Model.AuthClient model, Person currentPerson = null, bool loadAttributes = true )
        {
            var viewModel = new AuthClientViewModel();
            viewModel.SetPropertiesFrom( model, currentPerson, loadAttributes );
            return viewModel;
        }
    }
}
