//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;
using Rock.Attribute;
using Rock.Model;
using Rock.Web.Cache;

namespace Rock.ViewModel
{
    /// <summary>
    /// RegistrationInstance View Model
    /// </summary>
    [ViewModelOf( typeof( Rock.Model.RegistrationInstance ) )]
    public partial class RegistrationInstanceViewModel : ViewModelBase
    {
        /// <summary>
        /// Gets or sets the AccountId.
        /// </summary>
        /// <value>
        /// The AccountId.
        /// </value>
        public int? AccountId { get; set; }

        /// <summary>
        /// Gets or sets the AdditionalConfirmationDetails.
        /// </summary>
        /// <value>
        /// The AdditionalConfirmationDetails.
        /// </value>
        public string AdditionalConfirmationDetails { get; set; }

        /// <summary>
        /// Gets or sets the AdditionalReminderDetails.
        /// </summary>
        /// <value>
        /// The AdditionalReminderDetails.
        /// </value>
        public string AdditionalReminderDetails { get; set; }

        /// <summary>
        /// Gets or sets the ContactEmail.
        /// </summary>
        /// <value>
        /// The ContactEmail.
        /// </value>
        public string ContactEmail { get; set; }

        /// <summary>
        /// Gets or sets the ContactPersonAliasId.
        /// </summary>
        /// <value>
        /// The ContactPersonAliasId.
        /// </value>
        public int? ContactPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the ContactPhone.
        /// </summary>
        /// <value>
        /// The ContactPhone.
        /// </value>
        public string ContactPhone { get; set; }

        /// <summary>
        /// Gets or sets the Cost.
        /// </summary>
        /// <value>
        /// The Cost.
        /// </value>
        public decimal? Cost { get; set; }

        /// <summary>
        /// Gets or sets the DefaultPayment.
        /// </summary>
        /// <value>
        /// The DefaultPayment.
        /// </value>
        public decimal? DefaultPayment { get; set; }

        /// <summary>
        /// Gets or sets the Details.
        /// </summary>
        /// <value>
        /// The Details.
        /// </value>
        public string Details { get; set; }

        /// <summary>
        /// Gets or sets the EndDateTime.
        /// </summary>
        /// <value>
        /// The EndDateTime.
        /// </value>
        public DateTime? EndDateTime { get; set; }

        /// <summary>
        /// Gets or sets the IsActive.
        /// </summary>
        /// <value>
        /// The IsActive.
        /// </value>
        public bool IsActive { get; set; }

        /// <summary>
        /// Gets or sets the MaxAttendees.
        /// </summary>
        /// <value>
        /// The MaxAttendees.
        /// </value>
        public int? MaxAttendees { get; set; }

        /// <summary>
        /// Gets or sets the MinimumInitialPayment.
        /// </summary>
        /// <value>
        /// The MinimumInitialPayment.
        /// </value>
        public decimal? MinimumInitialPayment { get; set; }

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        /// <value>
        /// The Name.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the PaymentRedirectData.
        /// </summary>
        /// <value>
        /// The PaymentRedirectData.
        /// </value>
        public string PaymentRedirectData { get; set; }

        /// <summary>
        /// Gets or sets the RegistrationInstructions.
        /// </summary>
        /// <value>
        /// The RegistrationInstructions.
        /// </value>
        public string RegistrationInstructions { get; set; }

        /// <summary>
        /// Gets or sets the RegistrationTemplateId.
        /// </summary>
        /// <value>
        /// The RegistrationTemplateId.
        /// </value>
        public int RegistrationTemplateId { get; set; }

        /// <summary>
        /// Gets or sets the RegistrationWorkflowTypeId.
        /// </summary>
        /// <value>
        /// The RegistrationWorkflowTypeId.
        /// </value>
        public int? RegistrationWorkflowTypeId { get; set; }

        /// <summary>
        /// Gets or sets the ReminderSent.
        /// </summary>
        /// <value>
        /// The ReminderSent.
        /// </value>
        public bool ReminderSent { get; set; }

        /// <summary>
        /// Gets or sets the SendReminderDateTime.
        /// </summary>
        /// <value>
        /// The SendReminderDateTime.
        /// </value>
        public DateTime? SendReminderDateTime { get; set; }

        /// <summary>
        /// Gets or sets the StartDateTime.
        /// </summary>
        /// <value>
        /// The StartDateTime.
        /// </value>
        public DateTime? StartDateTime { get; set; }

        /// <summary>
        /// Gets or sets the CreatedDateTime.
        /// </summary>
        /// <value>
        /// The CreatedDateTime.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the ModifiedDateTime.
        /// </summary>
        /// <value>
        /// The ModifiedDateTime.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the CreatedByPersonAliasId.
        /// </summary>
        /// <value>
        /// The CreatedByPersonAliasId.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the ModifiedByPersonAliasId.
        /// </summary>
        /// <value>
        /// The ModifiedByPersonAliasId.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

        /// <summary>
        /// Sets the properties from.
        /// </summary>
        /// <param name="model">The model.</param>
        /// <param name="currentPerson">The current person.</param>
        /// <param name="loadAttributes">if set to <c>true</c> [load attributes].</param>
        public virtual void SetPropertiesFrom( Rock.Model.RegistrationInstance model, Person currentPerson = null, bool loadAttributes = true )
        {
            if ( model == null )
            {
                return;
            }

            if ( loadAttributes && model is IHasAttributes hasAttributes )
            {
                if ( hasAttributes.Attributes == null )
                {
                    hasAttributes.LoadAttributes();
                }

                Attributes = hasAttributes.AttributeValues.Where( av =>
                {
                    var attribute = AttributeCache.Get( av.Value.AttributeId );
                    return attribute?.IsAuthorized( Rock.Security.Authorization.EDIT, currentPerson ) ?? false;
                } ).ToDictionary(
                    kvp => kvp.Key,
                    kvp => kvp.Value.ToViewModel<AttributeValueViewModel>() as object );
            }

            AccountId = model.AccountId;
            AdditionalConfirmationDetails = model.AdditionalConfirmationDetails;
            AdditionalReminderDetails = model.AdditionalReminderDetails;
            ContactEmail = model.ContactEmail;
            ContactPersonAliasId = model.ContactPersonAliasId;
            ContactPhone = model.ContactPhone;
            Cost = model.Cost;
            DefaultPayment = model.DefaultPayment;
            Details = model.Details;
            EndDateTime = model.EndDateTime;
            IsActive = model.IsActive;
            MaxAttendees = model.MaxAttendees;
            MinimumInitialPayment = model.MinimumInitialPayment;
            Name = model.Name;
            PaymentRedirectData = model.PaymentRedirectData;
            RegistrationInstructions = model.RegistrationInstructions;
            RegistrationTemplateId = model.RegistrationTemplateId;
            RegistrationWorkflowTypeId = model.RegistrationWorkflowTypeId;
            ReminderSent = model.ReminderSent;
            SendReminderDateTime = model.SendReminderDateTime;
            StartDateTime = model.StartDateTime;
            CreatedDateTime = model.CreatedDateTime;
            ModifiedDateTime = model.ModifiedDateTime;
            CreatedByPersonAliasId = model.CreatedByPersonAliasId;
            ModifiedByPersonAliasId = model.ModifiedByPersonAliasId;

            SetAdditionalPropertiesFrom( model, currentPerson, loadAttributes );
        }

        /// <summary>
        /// Creates a view model from the specified model.
        /// </summary>
        /// <param name="model">The model.</param>
        /// <param name="currentPerson" >The current person.</param>
        /// <param name="loadAttributes" >if set to <c>true</c> [load attributes].</param>
        /// <returns></returns>
        public static RegistrationInstanceViewModel From( Rock.Model.RegistrationInstance model, Person currentPerson = null, bool loadAttributes = true )
        {
            var viewModel = new RegistrationInstanceViewModel();
            viewModel.SetPropertiesFrom( model, currentPerson, loadAttributes );
            return viewModel;
        }
    }
}
